.TH "HiEasyX::SysStatic" 3 "2023年 一月 13日 星期五" "Version Ver 0.3.0" "HiEasyX" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HiEasyX::SysStatic \- 系统静态控件  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SysStatic\&.h>\fP
.PP
继承自 \fBHiEasyX::SysControlBase\fP \&.
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBSysStatic\fP ()"
.br
.ti -1c
.RI "\fBSysStatic\fP (HWND hParent, RECT rct, std::wstring strText=L'')"
.br
.ti -1c
.RI "\fBSysStatic\fP (HWND hParent, int x, int y, int w, int h, std::wstring strText=L'')"
.br
.ti -1c
.RI "void \fBCenter\fP (bool center)"
.br
.RI "设置文本居中 "
.ti -1c
.RI "void \fBImage\fP (bool enable, IMAGE *img=nullptr)"
.br
.RI "设置图片 "
.in -1c
.SS "Protected 成员函数"

.in +1c
.ti -1c
.RI "void \fBRealCreate\fP (HWND hParent) override"
.br
.RI "实际调用的创建控件函数（各种控件实现不同，但内部都调用 CreateControl 创建控件） "
.in -1c
.SS "额外继承的成员函数"
.SH "详细描述"
.PP 
系统静态控件 
.PP
在文件 SysStatic\&.h 第 18 行定义\&.
.SH "构造及析构函数说明"
.PP 
.SS "HiEasyX::SysStatic::SysStatic ()"

.PP
在文件 SysStatic\&.cpp 第 19 行定义\&.
.PP
.nf
20     {
21     }
.fi
.SS "HiEasyX::SysStatic::SysStatic (HWND hParent, RECT rct, std::wstring strText = \fCL''\fP)"

.PP
在文件 SysStatic\&.cpp 第 23 行定义\&.
.PP
.nf
24     {
25         Create(hParent, rct, strText);
26     }
.fi
.SS "HiEasyX::SysStatic::SysStatic (HWND hParent, int x, int y, int w, int h, std::wstring strText = \fCL''\fP)"

.PP
在文件 SysStatic\&.cpp 第 28 行定义\&.
.PP
.nf
29     {
30         Create(hParent, x, y, w, h, strText);
31     }
.fi
.SH "成员函数说明"
.PP 
.SS "void HiEasyX::SysStatic::Center (bool center)"

.PP
设置文本居中 
.PP
\fB参数\fP
.RS 4
\fIcenter\fP 是否居中 
.RE
.PP

.PP
在文件 SysStatic\&.cpp 第 33 行定义\&.
.PP
.nf
34     {
35         long style = GetWindowLong(GetHandle(), GWL_STYLE);
36         if (center)
37             style |= SS_CENTER;
38         else
39             style &= ~SS_CENTER;
40         SetWindowLongPtr(GetHandle(), GWL_STYLE, style);
41     }
.fi
.SS "void HiEasyX::SysStatic::Image (bool enable, IMAGE * img = \fCnullptr\fP)"

.PP
设置图片 
.PP
\fB参数\fP
.RS 4
\fIenable\fP 是否启用图像 
.br
\fIimg\fP 图像 
.RE
.PP

.PP
在文件 SysStatic\&.cpp 第 43 行定义\&.
.PP
.nf
44     {
45         long style = GetWindowLong(GetHandle(), GWL_STYLE);
46         if (enable)
47             style |= SS_BITMAP;
48         else
49             style &= ~SS_BITMAP;
50         SetWindowLongPtr(GetHandle(), GWL_STYLE, style);
51         if (enable)
52         {
53             HBITMAP hBitmap = Image2Bitmap(img, false);
54             HBITMAP hBitmap2 = (HBITMAP)SendMessage(GetHandle(), STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBitmap);
55             DeleteObject(hBitmap2);
56         }
57     }
.fi
.SS "void HiEasyX::SysStatic::RealCreate (HWND hParent)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
实际调用的创建控件函数（各种控件实现不同，但内部都调用 CreateControl 创建控件） 
.PP
\fB参数\fP
.RS 4
\fIhParent\fP 父控件句柄 
.RE
.PP

.PP
实现了 \fBHiEasyX::SysControlBase\fP\&.
.PP
在文件 SysStatic\&.cpp 第 7 行定义\&.
.PP
.nf
8     {
9         m_type = SCT_Static;
10         m_hWnd = CreateControl(
11             hParent,
12             L"Static",
13             L"",
14             WS_CHILD | WS_VISIBLE
15         );
16 
17     }
.fi


.SH "作者"
.PP 
由 Doyxgen 通过分析 HiEasyX 的 源代码自动生成\&.
