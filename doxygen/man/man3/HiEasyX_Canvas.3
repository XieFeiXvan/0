.TH "HiEasyX::Canvas" 3 "Sat Aug 13 2022" "Version Ver0.2(alpha)" "HiEasyX" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HiEasyX::Canvas
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <HiCanvas\&.h>\fP
.PP
Inherits IMAGE\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCanvas\fP ()"
.br
.RI "画布操作函数 "
.ti -1c
.RI "\fBCanvas\fP (int w, int h, COLORREF cBk=BLACK)"
.br
.ti -1c
.RI "\fBCanvas\fP (IMAGE *pImg)"
.br
.ti -1c
.RI "\fBCanvas\fP (IMAGE img)"
.br
.ti -1c
.RI "\fBCanvas\fP & \fBoperator=\fP (IMAGE *pImg)"
.br
.ti -1c
.RI "\fBCanvas\fP & \fBoperator=\fP (IMAGE img)"
.br
.ti -1c
.RI "void \fBUpdateSizeInfo\fP ()"
.br
.ti -1c
.RI "void \fBResize\fP (int w, int h) override"
.br
.ti -1c
.RI "\fBCanvas\fP & \fBBindToImage\fP (IMAGE *pImg)"
.br
.ti -1c
.RI "\fBCanvas\fP & \fBBindToWindow\fP (HWND hWnd, IMAGE *pImg)"
.br
.ti -1c
.RI "IMAGE * \fBGetImagePointer\fP ()"
.br
.ti -1c
.RI "DWORD * \fBGetBuffer\fP () const"
.br
.ti -1c
.RI "int \fBGetBufferSize\fP () const"
.br
.ti -1c
.RI "HDC \fBGetHDC\fP ()"
.br
.ti -1c
.RI "int \fBgetwidth\fP () const"
.br
.ti -1c
.RI "int \fBgetheight\fP () const"
.br
.ti -1c
.RI "int \fBGetWidth\fP () const"
.br
.ti -1c
.RI "int \fBGetHeight\fP () const"
.br
.ti -1c
.RI "void \fBBeginBatchDrawing\fP ()"
.br
.RI "绘图状态设置函数 "
.ti -1c
.RI "void \fBEndBatchDrawing\fP ()"
.br
.ti -1c
.RI "bool \fBisValidPoint\fP (int x, int y, int *pIndex=nullptr)"
.br
.RI "绘图函数 "
.ti -1c
.RI "void \fBRender\fP (int x, int y, IMAGE *pImg=nullptr, RECT crop={ 0 }, BYTE alpha=255, bool bUseSrcAlpha=false, bool isCalculated=true)"
.br
.ti -1c
.RI "LINESTYLE \fBGetLineStyle\fP ()"
.br
.ti -1c
.RI "void \fBClear\fP (bool isSetColor=false, COLORREF bkcolor=BLACK)"
.br
.ti -1c
.RI "void \fBSetLineStyle\fP (LINESTYLE style)"
.br
.ti -1c
.RI "void \fBSetLineStyle\fP (int style, int thickness=1, const DWORD *puserstyle=nullptr, DWORD userstylecount=0)"
.br
.ti -1c
.RI "void \fBSetLineThickness\fP (int thickness)"
.br
.ti -1c
.RI "int \fBGetLineThickness\fP ()"
.br
.ti -1c
.RI "FILLSTYLE \fBGetFillStyle\fP ()"
.br
.ti -1c
.RI "void \fBSetFillStyle\fP (FILLSTYLE style)"
.br
.ti -1c
.RI "void \fBSetFillStyle\fP (int style, long hatch=0, IMAGE *ppattern=nullptr)"
.br
.ti -1c
.RI "void \fBSetFillStyle\fP (BYTE *ppattern8x8)"
.br
.ti -1c
.RI "int \fBGetRop2\fP ()"
.br
.ti -1c
.RI "void \fBSetRop2\fP (int mode)"
.br
.ti -1c
.RI "int \fBGetPolyFillMode\fP ()"
.br
.ti -1c
.RI "void \fBSetPolyFillMode\fP (int mode)"
.br
.ti -1c
.RI "void \fBSetDefault\fP ()"
.br
.ti -1c
.RI "COLORREF \fBGetLineColor\fP ()"
.br
.ti -1c
.RI "void \fBSetLineColor\fP (COLORREF color)"
.br
.ti -1c
.RI "COLORREF \fBGetTextColor\fP ()"
.br
.ti -1c
.RI "void \fBSetTextColor\fP (COLORREF color)"
.br
.ti -1c
.RI "COLORREF \fBGetFillColor\fP ()"
.br
.ti -1c
.RI "void \fBSetFillColor\fP (COLORREF color)"
.br
.ti -1c
.RI "COLORREF \fBGetBkColor\fP ()"
.br
.ti -1c
.RI "void \fBSetBkColor\fP (COLORREF color)"
.br
.ti -1c
.RI "int \fBGetBkMode\fP ()"
.br
.ti -1c
.RI "void \fBSetBkMode\fP (int mode)"
.br
.ti -1c
.RI "COLORREF \fBGetPixel\fP (int x, int y)"
.br
.ti -1c
.RI "void \fBPutPixel\fP (int x, int y, COLORREF c)"
.br
.ti -1c
.RI "COLORREF \fBGetPixel_Fast\fP (int x, int y)"
.br
.ti -1c
.RI "void \fBPutPixel_Fast\fP (int x, int y, COLORREF c)"
.br
.ti -1c
.RI "void \fBPutPixel_Fast_Alpha\fP (int x, int y, COLORREF c)"
.br
.ti -1c
.RI "void \fBLine\fP (int x1, int y1, int x2, int y2, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBLine\fP (POINT pt1, POINT pt2, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBRectangle\fP (int left, int top, int right, int bottom, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBRectangle\fP (RECT rct, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFillRectangle\fP (int left, int top, int right, int bottom, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBFillRectangle\fP (RECT rct, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBSolidRectangle\fP (int left, int top, int right, int bottom, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBSolidRectangle\fP (RECT rct, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBClearRectangle\fP (int left, int top, int right, int bottom)"
.br
.ti -1c
.RI "void \fBClearRectangle\fP (RECT rct)"
.br
.ti -1c
.RI "void \fBCircle\fP (int x, int y, int radius, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFillCircle\fP (int x, int y, int radius, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBSolidCircle\fP (int x, int y, int radius, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBClearCircle\fP (int x, int y, int radius)"
.br
.ti -1c
.RI "void \fBEllipse\fP (int left, int top, int right, int bottom, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBEllipse\fP (RECT rct, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFillEllipse\fP (int left, int top, int right, int bottom, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBFillEllipse\fP (RECT rct, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBSolidEllipse\fP (int left, int top, int right, int bottom, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBSolidEllipse\fP (RECT rct, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBClearEllipse\fP (int left, int top, int right, int bottom)"
.br
.ti -1c
.RI "void \fBClearEllipse\fP (RECT rct)"
.br
.ti -1c
.RI "void \fBRoundRect\fP (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBRoundRect\fP (RECT rct, int ellipsewidth, int ellipseheight, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFillRoundRect\fP (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBFillRoundRect\fP (RECT rct, int ellipsewidth, int ellipseheight, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBSolidRoundRect\fP (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBSolidRoundRect\fP (RECT rct, int ellipsewidth, int ellipseheight, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBClearRoundRect\fP (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight)"
.br
.ti -1c
.RI "void \fBClearRoundRect\fP (RECT rct, int ellipsewidth, int ellipseheight)"
.br
.ti -1c
.RI "void \fBArc\fP (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBArc\fP (RECT rct, double stangle, double endangle, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBPie\fP (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBPie\fP (RECT rct, double stangle, double endangle, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFillPie\fP (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBFillPie\fP (RECT rct, double stangle, double endangle, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBSolidPie\fP (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBSolidPie\fP (RECT rct, double stangle, double endangle, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBClearPie\fP (int left, int top, int right, int bottom, double stangle, double endangle)"
.br
.ti -1c
.RI "void \fBClearPie\fP (RECT rct, double stangle, double endangle)"
.br
.ti -1c
.RI "void \fBPolyline\fP (const POINT *points, int num, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBPolygon\fP (const POINT *points, int num, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFillPolygon\fP (const POINT *points, int num, bool isSetColor=false, COLORREF cLine=0, COLORREF cFill=0)"
.br
.ti -1c
.RI "void \fBSolidPolygon\fP (const POINT *points, int num, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBClearPolygon\fP (const POINT *points, int num)"
.br
.ti -1c
.RI "void \fBPolyBezier\fP (const POINT *points, int num, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBFloodFill\fP (int x, int y, COLORREF color, int filltype=FLOODFILLBORDER, bool isSetColor=false, COLORREF cFill=0)"
.br
.ti -1c
.RI "int \fBOutTextXY\fP (int x, int y, LPCTSTR lpszText, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "int \fBOutTextXY\fP (int x, int y, TCHAR ch, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "int \fBOutTextXY_Format\fP (int x, int y, int _Size, LPCTSTR _Format,\&.\&.\&.)"
.br
.ti -1c
.RI "int \fBTextWidth\fP (LPCTSTR lpszText)"
.br
.ti -1c
.RI "int \fBTextWidth\fP (TCHAR c)"
.br
.ti -1c
.RI "int \fBTextHeight\fP (LPCTSTR lpszText)"
.br
.ti -1c
.RI "int \fBTextHeight\fP (TCHAR c)"
.br
.ti -1c
.RI "int \fBDraw_Text\fP (LPCTSTR str, RECT *pRect, UINT uFormat, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "int \fBDraw_Text\fP (TCHAR ch, RECT *pRect, UINT uFormat, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBCenterText\fP (LPCTSTR lpszText, RECT rct={ \-1 }, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBCenterText_Format\fP (int _Size, LPCTSTR _Format,\&.\&.\&.)"
.br
.ti -1c
.RI "LOGFONT \fBGetTextStyle\fP ()"
.br
.ti -1c
.RI "void \fBSetTextStyle\fP (int nHeight, int nWidth, LPCTSTR lpszFace)"
.br
.ti -1c
.RI "void \fBSetTextStyle\fP (int nHeight, int nWidth, LPCTSTR lpszFace, int nEscapement, int nOrientation, int nWeight, bool bItalic, bool bUnderline, bool bStrikeOut)"
.br
.ti -1c
.RI "void \fBSetTextStyle\fP (int nHeight, int nWidth, LPCTSTR lpszFace, int nEscapement, int nOrientation, int nWeight, bool bItalic, bool bUnderline, bool bStrikeOut, BYTE fbCharSet, BYTE fbOutPrecision, BYTE fbClipPrecision, BYTE fbQuality, BYTE fbPitchAndFamily)"
.br
.ti -1c
.RI "void \fBSetTextStyle\fP (LOGFONT font)"
.br
.ti -1c
.RI "void \fBSetFont\fP (int nHeight, int nWidth=0)"
.br
.ti -1c
.RI "void \fBSetTypeface\fP (LPCTSTR lpsz)"
.br
.ti -1c
.RI "void \fBSetTextEscapement\fP (LONG lfEscapement)"
.br
.ti -1c
.RI "void \fBSetTextOrientation\fP (LONG lfOrientation)"
.br
.ti -1c
.RI "void \fBSetTextWeight\fP (LONG lfWeight)"
.br
.ti -1c
.RI "void \fBSetTextItalic\fP (bool lfItalic)"
.br
.ti -1c
.RI "void \fBSetTextUnderline\fP (bool lfUnderline)"
.br
.ti -1c
.RI "void \fBSetTextStrikeOut\fP (bool lfStrikeOut)"
.br
.ti -1c
.RI "COLORREF \fBGetColor\fP ()"
.br
.ti -1c
.RI "void \fBSetColor\fP (COLORREF color)"
.br
.ti -1c
.RI "int \fBGetX\fP ()"
.br
.ti -1c
.RI "int \fBGetY\fP ()"
.br
.ti -1c
.RI "void \fBMoveTo\fP (int x, int y)"
.br
.ti -1c
.RI "void \fBMoveRel\fP (int dx, int dy)"
.br
.ti -1c
.RI "void \fBLineTo\fP (int x, int y, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBLineRel\fP (int dx, int dy, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBOutText\fP (LPCTSTR lpszText, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "void \fBOutText\fP (TCHAR ch, bool isSetColor=false, COLORREF c=0)"
.br
.ti -1c
.RI "int \fBOutText_Format\fP (int _Size, LPCTSTR _Format,\&.\&.\&.)"
.br
.ti -1c
.RI "IMAGE \fBLoad_Image_Alpha\fP (LPCTSTR lpszImgFile, int x=0, int y=0, bool bResize=false, int nWidth=0, int nHeight=0, BYTE alpha=255, bool bUseSrcAlpha=false)"
.br
.ti -1c
.RI "void \fBPutImageIn_Alpha\fP (int x, int y, IMAGE *pImg, RECT crop={ 0 }, BYTE alpha=255, bool bUseSrcAlpha=false, bool isCalculated=true)"
.br
.ti -1c
.RI "void \fBRotateImage\fP (double radian, COLORREF bkcolor=BLACK, bool autosize=false, bool highquality=true)"
.br
.ti -1c
.RI "void \fBRotateImage_Alpha\fP (double radian, COLORREF bkcolor=BLACK)"
.br
.ti -1c
.RI "void \fBZoomImage_Alpha\fP (int nW, int nH)"
.br
.ti -1c
.RI "void \fBZoomImage_Win32_Alpha\fP (int nW, int nH)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBCleanUpSettings\fP ()"
.br
.ti -1c
.RI "bool \fBBeginWindowTask\fP ()"
.br
.ti -1c
.RI "void \fBEndWindowTask\fP ()"
.br
.ti -1c
.RI "bool \fBBeginDrawing\fP ()"
.br
.ti -1c
.RI "void \fBEndDrawing\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBDrawingProperty\fP \fBm_property\fP"
.br
.ti -1c
.RI "DWORD * \fBm_pBuf\fP = nullptr"
.br
.ti -1c
.RI "int \fBm_nWidth\fP"
.br
.ti -1c
.RI "int \fBm_nHeight\fP"
.br
.ti -1c
.RI "int \fBm_nBufSize\fP"
.br
.ti -1c
.RI "bool \fBm_bBindToImgPointer\fP"
.br
.ti -1c
.RI "IMAGE * \fBm_pImg\fP"
.br
.ti -1c
.RI "bool \fBm_bBatchDraw\fP"
.br
.ti -1c
.RI "bool \fBm_bDoNotEndDrawing\fP"
.br
.ti -1c
.RI "HWND \fBm_hBindWindow\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 83 of file HiCanvas\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "HiEasyX::Canvas::Canvas ()"

.PP
画布操作函数 
.PP
Definition at line 238 of file HiCanvas\&.cpp\&.
.SS "HiEasyX::Canvas::Canvas (int w, int h, COLORREF cBk = \fCBLACK\fP)"

.PP
Definition at line 244 of file HiCanvas\&.cpp\&.
.SS "HiEasyX::Canvas::Canvas (IMAGE * pImg)"

.PP
Definition at line 255 of file HiCanvas\&.cpp\&.
.SS "HiEasyX::Canvas::Canvas (IMAGE img)"

.PP
Definition at line 260 of file HiCanvas\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void HiEasyX::Canvas::Arc (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 950 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Arc (RECT rct, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 960 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::BeginBatchDrawing ()"

.PP
绘图状态设置函数 
.PP
Definition at line 345 of file HiCanvas\&.cpp\&.
.SS "bool HiEasyX::Canvas::BeginDrawing ()\fC [protected]\fP"

.PP
Definition at line 212 of file HiCanvas\&.cpp\&.
.SS "bool HiEasyX::Canvas::BeginWindowTask ()\fC [protected]\fP"

.PP
Definition at line 185 of file HiCanvas\&.cpp\&.
.SS "\fBCanvas\fP & HiEasyX::Canvas::BindToImage (IMAGE * pImg)"

.PP
Definition at line 329 of file HiCanvas\&.cpp\&.
.SS "\fBCanvas\fP & HiEasyX::Canvas::BindToWindow (HWND hWnd, IMAGE * pImg)"

.PP
Definition at line 338 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::CenterText (LPCTSTR lpszText, RECT rct = \fC{ \-1 }\fP, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1215 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::CenterText_Format (int _Size, LPCTSTR _Format,  \&.\&.\&.)"

.PP
Definition at line 1221 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Circle (int x, int y, int radius, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 781 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::CleanUpSettings ()\fC [protected]\fP"

.PP
Definition at line 171 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Clear (bool isSetColor = \fCfalse\fP, COLORREF bkcolor = \fCBLACK\fP)"

.PP
Definition at line 400 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearCircle (int x, int y, int radius)"

.PP
Definition at line 815 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearEllipse (int left, int top, int right, int bottom)"

.PP
Definition at line 873 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearEllipse (RECT rct)"

.PP
Definition at line 882 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearPie (int left, int top, int right, int bottom, double stangle, double endangle)"

.PP
Definition at line 1014 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearPie (RECT rct, double stangle, double endangle)"

.PP
Definition at line 1023 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearPolygon (const POINT * points, int num)"

.PP
Definition at line 1072 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearRectangle (int left, int top, int right, int bottom)"

.PP
Definition at line 767 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearRectangle (RECT rct)"

.PP
Definition at line 776 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearRoundRect (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight)"

.PP
Definition at line 936 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ClearRoundRect (RECT rct, int ellipsewidth, int ellipseheight)"

.PP
Definition at line 945 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::Draw_Text (LPCTSTR str, RECT * pRect, UINT uFormat, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1191 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::Draw_Text (TCHAR ch, RECT * pRect, UINT uFormat, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1203 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Ellipse (int left, int top, int right, int bottom, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 824 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Ellipse (RECT rct, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 834 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::EndBatchDrawing ()"

.PP
Definition at line 353 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::EndDrawing ()\fC [protected]\fP"

.PP
Definition at line 223 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::EndWindowTask ()\fC [protected]\fP"

.PP
Definition at line 204 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillCircle (int x, int y, int radius, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 791 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillEllipse (int left, int top, int right, int bottom, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 839 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillEllipse (RECT rct, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 853 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillPie (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 980 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillPie (RECT rct, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 994 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillPolygon (const POINT * points, int num, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 1048 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillRectangle (int left, int top, int right, int bottom, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 732 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillRectangle (RECT rct, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 747 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillRoundRect (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 902 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FillRoundRect (RECT rct, int ellipsewidth, int ellipseheight, bool isSetColor = \fCfalse\fP, COLORREF cLine = \fC0\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 916 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::FloodFill (int x, int y, COLORREF color, int filltype = \fCFLOODFILLBORDER\fP, bool isSetColor = \fCfalse\fP, COLORREF cFill = \fC0\fP)"

.PP
Definition at line 1091 of file HiCanvas\&.cpp\&.
.SS "COLORREF HiEasyX::Canvas::GetBkColor ()"

.PP
Definition at line 603 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::GetBkMode ()"

.PP
Definition at line 623 of file HiCanvas\&.cpp\&.
.SS "DWORD* HiEasyX::Canvas::GetBuffer () const\fC [inline]\fP"

.PP
Definition at line 155 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::GetBufferSize () const\fC [inline]\fP"

.PP
Definition at line 158 of file HiCanvas\&.h\&.
.SS "COLORREF HiEasyX::Canvas::GetColor ()"

.PP
Definition at line 1378 of file HiCanvas\&.cpp\&.
.SS "COLORREF HiEasyX::Canvas::GetFillColor ()"

.PP
Definition at line 583 of file HiCanvas\&.cpp\&.
.SS "FILLSTYLE HiEasyX::Canvas::GetFillStyle ()"

.PP
Definition at line 455 of file HiCanvas\&.cpp\&.
.SS "HDC HiEasyX::Canvas::GetHDC ()\fC [inline]\fP"

.PP
Definition at line 161 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::getheight () const\fC [inline]\fP"

.PP
Definition at line 165 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::GetHeight () const\fC [inline]\fP"

.PP
Definition at line 169 of file HiCanvas\&.h\&.
.SS "IMAGE* HiEasyX::Canvas::GetImagePointer ()\fC [inline]\fP"

.PP
Definition at line 152 of file HiCanvas\&.h\&.
.SS "COLORREF HiEasyX::Canvas::GetLineColor ()"

.PP
Definition at line 543 of file HiCanvas\&.cpp\&.
.SS "LINESTYLE HiEasyX::Canvas::GetLineStyle ()"

.PP
Definition at line 388 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::GetLineThickness ()"

.PP
Definition at line 450 of file HiCanvas\&.cpp\&.
.SS "COLORREF HiEasyX::Canvas::GetPixel (int x, int y)"

.PP
Definition at line 643 of file HiCanvas\&.cpp\&.
.SS "COLORREF HiEasyX::Canvas::GetPixel_Fast (int x, int y)"

.PP
Definition at line 663 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::GetPolyFillMode ()"

.PP
Definition at line 514 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::GetRop2 ()"

.PP
Definition at line 494 of file HiCanvas\&.cpp\&.
.SS "COLORREF HiEasyX::Canvas::GetTextColor ()"

.PP
Definition at line 563 of file HiCanvas\&.cpp\&.
.SS "LOGFONT HiEasyX::Canvas::GetTextStyle ()"

.PP
Definition at line 1233 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::getwidth () const\fC [inline]\fP"

.PP
Definition at line 163 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::GetWidth () const\fC [inline]\fP"

.PP
Definition at line 167 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::GetX ()"

.PP
Definition at line 1398 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::GetY ()"

.PP
Definition at line 1409 of file HiCanvas\&.cpp\&.
.SS "bool HiEasyX::Canvas::isValidPoint (int x, int y, int * pIndex = \fCnullptr\fP)"

.PP
绘图函数 
.PP
Definition at line 362 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Line (int x1, int y1, int x2, int y2, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 702 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Line (POINT pt1, POINT pt2, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 712 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::LineRel (int dx, int dy, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1448 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::LineTo (int x, int y, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1438 of file HiCanvas\&.cpp\&.
.SS "IMAGE HiEasyX::Canvas::Load_Image_Alpha (LPCTSTR lpszImgFile, int x = \fC0\fP, int y = \fC0\fP, bool bResize = \fCfalse\fP, int nWidth = \fC0\fP, int nHeight = \fC0\fP, BYTE alpha = \fC255\fP, bool bUseSrcAlpha = \fCfalse\fP)"

.PP
Definition at line 1498 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::MoveRel (int dx, int dy)"

.PP
Definition at line 1429 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::MoveTo (int x, int y)"

.PP
Definition at line 1420 of file HiCanvas\&.cpp\&.
.SS "\fBCanvas\fP & HiEasyX::Canvas::operator= (IMAGE * pImg)"

.PP
Definition at line 265 of file HiCanvas\&.cpp\&.
.SS "\fBCanvas\fP & HiEasyX::Canvas::operator= (IMAGE img)"

.PP
Definition at line 284 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::OutText (LPCTSTR lpszText, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1458 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::OutText (TCHAR ch, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1468 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::OutText_Format (int _Size, LPCTSTR _Format,  \&.\&.\&.)"

.PP
Definition at line 1478 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::OutTextXY (int x, int y, LPCTSTR lpszText, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1101 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::OutTextXY (int x, int y, TCHAR ch, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1114 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::OutTextXY_Format (int x, int y, int _Size, LPCTSTR _Format,  \&.\&.\&.)"

.PP
Definition at line 1127 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Pie (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 965 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Pie (RECT rct, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 975 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::PolyBezier (const POINT * points, int num, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1081 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Polygon (const POINT * points, int num, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1038 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Polyline (const POINT * points, int num, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1028 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::PutImageIn_Alpha (int x, int y, IMAGE * pImg, RECT crop = \fC{ 0 }\fP, BYTE alpha = \fC255\fP, bool bUseSrcAlpha = \fCfalse\fP, bool isCalculated = \fCtrue\fP)"

.PP
Definition at line 1515 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::PutPixel (int x, int y, COLORREF c)"

.PP
Definition at line 654 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::PutPixel_Fast (int x, int y, COLORREF c)"

.PP
Definition at line 674 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::PutPixel_Fast_Alpha (int x, int y, COLORREF c)"

.PP
Definition at line 687 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Rectangle (int left, int top, int right, int bottom, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 717 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Rectangle (RECT rct, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 727 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Render (int x, int y, IMAGE * pImg = \fCnullptr\fP, RECT crop = \fC{ 0 }\fP, BYTE alpha = \fC255\fP, bool bUseSrcAlpha = \fCfalse\fP, bool isCalculated = \fCtrue\fP)"

.PP
Definition at line 370 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::Resize (int w, int h)\fC [override]\fP"

.PP
Definition at line 306 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::RotateImage (double radian, COLORREF bkcolor = \fCBLACK\fP, bool autosize = \fCfalse\fP, bool highquality = \fCtrue\fP)"

.PP
Definition at line 1533 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::RotateImage_Alpha (double radian, COLORREF bkcolor = \fCBLACK\fP)"

.PP
Definition at line 1543 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::RoundRect (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 887 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::RoundRect (RECT rct, int ellipsewidth, int ellipseheight, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 897 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetBkColor (COLORREF color)"

.PP
Definition at line 614 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetBkMode (int mode)"

.PP
Definition at line 634 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetColor (COLORREF color)"

.PP
Definition at line 1389 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetDefault ()"

.PP
Definition at line 534 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetFillColor (COLORREF color)"

.PP
Definition at line 594 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetFillStyle (BYTE * ppattern8x8)"

.PP
Definition at line 485 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetFillStyle (FILLSTYLE style)"

.PP
Definition at line 467 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetFillStyle (int style, long hatch = \fC0\fP, IMAGE * ppattern = \fCnullptr\fP)"

.PP
Definition at line 476 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetFont (int nHeight, int nWidth = \fC0\fP)"

.PP
Definition at line 1281 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetLineColor (COLORREF color)"

.PP
Definition at line 554 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetLineStyle (int style, int thickness = \fC1\fP, const DWORD * puserstyle = \fCnullptr\fP, DWORD userstylecount = \fC0\fP)"

.PP
Definition at line 434 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetLineStyle (LINESTYLE style)"

.PP
Definition at line 425 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetLineThickness (int thickness)"

.PP
Definition at line 443 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetPolyFillMode (int mode)"

.PP
Definition at line 525 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetRop2 (int mode)"

.PP
Definition at line 505 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextColor (COLORREF color)"

.PP
Definition at line 574 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextEscapement (LONG lfEscapement)"

.PP
Definition at line 1306 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextItalic (bool lfItalic)"

.PP
Definition at line 1342 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextOrientation (LONG lfOrientation)"

.PP
Definition at line 1318 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextStrikeOut (bool lfStrikeOut)"

.PP
Definition at line 1366 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextStyle (int nHeight, int nWidth, LPCTSTR lpszFace)"

.PP
Definition at line 1245 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextStyle (int nHeight, int nWidth, LPCTSTR lpszFace, int nEscapement, int nOrientation, int nWeight, bool bItalic, bool bUnderline, bool bStrikeOut)"

.PP
Definition at line 1254 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextStyle (int nHeight, int nWidth, LPCTSTR lpszFace, int nEscapement, int nOrientation, int nWeight, bool bItalic, bool bUnderline, bool bStrikeOut, BYTE fbCharSet, BYTE fbOutPrecision, BYTE fbClipPrecision, BYTE fbQuality, BYTE fbPitchAndFamily)"

.PP
Definition at line 1263 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextStyle (LOGFONT font)"

.PP
Definition at line 1272 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextUnderline (bool lfUnderline)"

.PP
Definition at line 1354 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTextWeight (LONG lfWeight)"

.PP
Definition at line 1330 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SetTypeface (LPCTSTR lpsz)"

.PP
Definition at line 1294 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidCircle (int x, int y, int radius, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 805 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidEllipse (int left, int top, int right, int bottom, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 858 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidEllipse (RECT rct, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 868 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidPie (int left, int top, int right, int bottom, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 999 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidPie (RECT rct, double stangle, double endangle, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1009 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidPolygon (const POINT * points, int num, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 1062 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidRectangle (int left, int top, int right, int bottom, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 752 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidRectangle (RECT rct, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 762 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidRoundRect (int left, int top, int right, int bottom, int ellipsewidth, int ellipseheight, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 921 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::SolidRoundRect (RECT rct, int ellipsewidth, int ellipseheight, bool isSetColor = \fCfalse\fP, COLORREF c = \fC0\fP)"

.PP
Definition at line 931 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::TextHeight (LPCTSTR lpszText)"

.PP
Definition at line 1169 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::TextHeight (TCHAR c)"

.PP
Definition at line 1180 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::TextWidth (LPCTSTR lpszText)"

.PP
Definition at line 1147 of file HiCanvas\&.cpp\&.
.SS "int HiEasyX::Canvas::TextWidth (TCHAR c)"

.PP
Definition at line 1158 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::UpdateSizeInfo ()"

.PP
Definition at line 289 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ZoomImage_Alpha (int nW, int nH)"

.PP
Definition at line 1548 of file HiCanvas\&.cpp\&.
.SS "void HiEasyX::Canvas::ZoomImage_Win32_Alpha (int nW, int nH)"

.PP
Definition at line 1566 of file HiCanvas\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "bool HiEasyX::Canvas::m_bBatchDraw\fC [protected]\fP"

.PP
Definition at line 96 of file HiCanvas\&.h\&.
.SS "bool HiEasyX::Canvas::m_bBindToImgPointer\fC [protected]\fP"

.PP
Definition at line 93 of file HiCanvas\&.h\&.
.SS "bool HiEasyX::Canvas::m_bDoNotEndDrawing\fC [protected]\fP"

.PP
Definition at line 97 of file HiCanvas\&.h\&.
.SS "HWND HiEasyX::Canvas::m_hBindWindow\fC [protected]\fP"

.PP
Definition at line 99 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::m_nBufSize\fC [protected]\fP"

.PP
Definition at line 91 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::m_nHeight\fC [protected]\fP"

.PP
Definition at line 90 of file HiCanvas\&.h\&.
.SS "int HiEasyX::Canvas::m_nWidth\fC [protected]\fP"

.PP
Definition at line 90 of file HiCanvas\&.h\&.
.SS "DWORD* HiEasyX::Canvas::m_pBuf = nullptr\fC [protected]\fP"

.PP
Definition at line 89 of file HiCanvas\&.h\&.
.SS "IMAGE* HiEasyX::Canvas::m_pImg\fC [protected]\fP"

.PP
Definition at line 94 of file HiCanvas\&.h\&.
.SS "\fBDrawingProperty\fP HiEasyX::Canvas::m_property\fC [protected]\fP"

.PP
Definition at line 87 of file HiCanvas\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HiEasyX from the source code\&.
