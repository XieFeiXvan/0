<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_hi_start_8cpp" kind="file" language="C++">
    <compoundname>HiStart.cpp</compoundname>
    <includes refid="_hi_start_8h" local="yes">HiStart.h</includes>
    <includes local="no">graphics.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="3">
        <label>graphics.h</label>
      </node>
      <node id="2">
        <label>HiStart.h</label>
        <link refid="_hi_start_8h"/>
      </node>
      <node id="1">
        <label>E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp</label>
        <link refid="_hi_start_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" prot="public" static="no" mutable="no">
        <type>POINT *</type>
        <definition>POINT* g_pDst</definition>
        <argsstring></argsstring>
        <name>g_pDst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="7" column="7" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" prot="public" static="no" mutable="no">
        <type>POINT *</type>
        <definition>POINT* g_pSrc</definition>
        <argsstring></argsstring>
        <name>g_pSrc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="8" column="7" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nWidth</definition>
        <argsstring></argsstring>
        <name>g_nWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="9" column="5" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nHeight</definition>
        <argsstring></argsstring>
        <name>g_nHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="10" column="5" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nCount</definition>
        <argsstring></argsstring>
        <name>g_nCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="11" column="5" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_hi_start_8cpp_1a03afeaaa63a4c52ca380fbbc2c9143dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isEdgePoint</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>isEdgePoint</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="14" column="6" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="14" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="_hi_start_8cpp_1a497d677ad9bd5fb9ca2275a7e68c59b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetDstPoints</definition>
        <argsstring>()</argsstring>
        <name>GetDstPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="36" column="6" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="36" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="_hi_start_8cpp_1a0819cab075a83713777d4aacd93890b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetSrcPoints</definition>
        <argsstring>()</argsstring>
        <name>GetSrcPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="80" column="6" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="80" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="_hi_start_8cpp_1a83f71c038a6b2540ee9cde9a4bc79176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Blur</definition>
        <argsstring>(DWORD *pMem)</argsstring>
        <name>Blur</name>
        <param>
          <type>DWORD *</type>
          <declname>pMem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" line="95" column="6" bodyfile="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp" bodystart="95" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_hi_start_8h" kindref="compound">HiStart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;graphics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>定义全局变量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" refkind="member"><highlight class="normal">POINT*<sp/><ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>点集(目标)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" refkind="member"><highlight class="normal">POINT*<sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>点集(源)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" kindref="member">g_nWidth</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>文字的宽度 int<sp/>g_nHeight;<sp/><sp/><sp/><sp/><sp/>//<sp/>文字的高度
int<sp/>g_nCount;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>点集包含的点的数量

//<sp/>是否为边缘点
bool<sp/>isEdgePoint(int<sp/>x,<sp/>int<sp/>y)
{
<sp/><sp/><sp/>//return<sp/>getpixel(x,<sp/>y)<sp/>==<sp/>WHITE;

<sp/>//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,1},<sp/>{0,-1},<sp/>{1,0},<sp/>{-1,0}<sp/>};
<sp/><sp/><sp/>//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,2},<sp/>{0,-2},<sp/>{2,0},<sp/>{-2,0}<sp/>};
<sp/><sp/><sp/>POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,4},<sp/>{0,-1},<sp/>{4,0},<sp/>{-1,0}<sp/>};
<sp/>if<sp/>(getpixel(x,<sp/>y)<sp/>!=<sp/>WHITE)
<sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;
<sp/><sp/>}
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(getpixel(x<sp/>+<sp/>t[i].x,<sp/>y<sp/>+<sp/>t[i].y)<sp/>!=<sp/>WHITE)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}
<sp/><sp/>}
<sp/><sp/>return<sp/>false;
}

//<sp/>获取目标点集
void<sp/>GetDstPoints()
{
<sp/>//<sp/>设置临时绘图对象
<sp/><sp/><sp/>IMAGE<sp/>img;
<sp/>SetWorkingImage(&amp;img);

<sp/><sp/><sp/><sp/>//<sp/>定义目标字符串
<sp/><sp/><sp/>TCHAR<sp/>s[]<sp/>=<sp/>_T(&quot;Hi<sp/>EasyX&quot;);

<sp/><sp/><sp/>//<sp/>计算目标字符串的宽高，并调整临时绘图对象的尺寸
<sp/><sp/><sp/>setcolor(WHITE);
<sp/><sp/><sp/>setfont(120,<sp/>0,<sp/>_T(&quot;Arial&quot;),<sp/>0,<sp/>0,<sp/>1000,<sp/>false,<sp/>false,<sp/>false);
<sp/>g_nWidth<sp/>=<sp/>textwidth(s);
<sp/><sp/><sp/>g_nHeight<sp/>=<sp/>textheight(s);
<sp/>Resize(&amp;img,<sp/>g_nWidth,<sp/>g_nHeight);

<sp/><sp/><sp/><sp/>//<sp/>输出目标字符串至<sp/>img<sp/>对象
<sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);

<sp/><sp/><sp/>//<sp/>计算构成目标字符串的点的数量
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>g_nCount<sp/>=<sp/>0;
<sp/><sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nCount++;

<sp/><sp/><sp/>//<sp/>计算目标数据
<sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" kindref="member">g_nHeight</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>文字的高度 int<sp/>g_nCount;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>点集包含的点的数量

//<sp/>是否为边缘点
bool<sp/>isEdgePoint(int<sp/>x,<sp/>int<sp/>y)
{
<sp/><sp/><sp/>//return<sp/>getpixel(x,<sp/>y)<sp/>==<sp/>WHITE;

<sp/>//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,1},<sp/>{0,-1},<sp/>{1,0},<sp/>{-1,0}<sp/>};
<sp/><sp/><sp/>//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,2},<sp/>{0,-2},<sp/>{2,0},<sp/>{-2,0}<sp/>};
<sp/><sp/><sp/>POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,4},<sp/>{0,-1},<sp/>{4,0},<sp/>{-1,0}<sp/>};
<sp/>if<sp/>(getpixel(x,<sp/>y)<sp/>!=<sp/>WHITE)
<sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;
<sp/><sp/>}
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(getpixel(x<sp/>+<sp/>t[i].x,<sp/>y<sp/>+<sp/>t[i].y)<sp/>!=<sp/>WHITE)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}
<sp/><sp/>}
<sp/><sp/>return<sp/>false;
}

//<sp/>获取目标点集
void<sp/>GetDstPoints()
{
<sp/>//<sp/>设置临时绘图对象
<sp/><sp/><sp/>IMAGE<sp/>img;
<sp/>SetWorkingImage(&amp;img);

<sp/><sp/><sp/><sp/>//<sp/>定义目标字符串
<sp/><sp/><sp/>TCHAR<sp/>s[]<sp/>=<sp/>_T(&quot;Hi<sp/>EasyX&quot;);

<sp/><sp/><sp/>//<sp/>计算目标字符串的宽高，并调整临时绘图对象的尺寸
<sp/><sp/><sp/>setcolor(WHITE);
<sp/><sp/><sp/>setfont(120,<sp/>0,<sp/>_T(&quot;Arial&quot;),<sp/>0,<sp/>0,<sp/>1000,<sp/>false,<sp/>false,<sp/>false);
<sp/>g_nWidth<sp/>=<sp/>textwidth(s);
<sp/><sp/><sp/>g_nHeight<sp/>=<sp/>textheight(s);
<sp/>Resize(&amp;img,<sp/>g_nWidth,<sp/>g_nHeight);

<sp/><sp/><sp/><sp/>//<sp/>输出目标字符串至<sp/>img<sp/>对象
<sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);

<sp/><sp/><sp/>//<sp/>计算构成目标字符串的点的数量
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>g_nCount<sp/>=<sp/>0;
<sp/><sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nCount++;

<sp/><sp/><sp/>//<sp/>计算目标数据
<sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>点集包含的点的数量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>是否为边缘点 bool<sp/>isEdgePoint(int<sp/>x,<sp/>int<sp/>y)
{
<sp/><sp/><sp/>//return<sp/>getpixel(x,<sp/>y)<sp/>==<sp/>WHITE;

<sp/>//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,1},<sp/>{0,-1},<sp/>{1,0},<sp/>{-1,0}<sp/>};
<sp/><sp/><sp/>//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,2},<sp/>{0,-2},<sp/>{2,0},<sp/>{-2,0}<sp/>};
<sp/><sp/><sp/>POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,4},<sp/>{0,-1},<sp/>{4,0},<sp/>{-1,0}<sp/>};
<sp/>if<sp/>(getpixel(x,<sp/>y)<sp/>!=<sp/>WHITE)
<sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;
<sp/><sp/>}
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(getpixel(x<sp/>+<sp/>t[i].x,<sp/>y<sp/>+<sp/>t[i].y)<sp/>!=<sp/>WHITE)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}
<sp/><sp/>}
<sp/><sp/>return<sp/>false;
}

//<sp/>获取目标点集
void<sp/>GetDstPoints()
{
<sp/>//<sp/>设置临时绘图对象
<sp/><sp/><sp/>IMAGE<sp/>img;
<sp/>SetWorkingImage(&amp;img);

<sp/><sp/><sp/><sp/>//<sp/>定义目标字符串
<sp/><sp/><sp/>TCHAR<sp/>s[]<sp/>=<sp/>_T(&quot;Hi<sp/>EasyX&quot;);

<sp/><sp/><sp/>//<sp/>计算目标字符串的宽高，并调整临时绘图对象的尺寸
<sp/><sp/><sp/>setcolor(WHITE);
<sp/><sp/><sp/>setfont(120,<sp/>0,<sp/>_T(&quot;Arial&quot;),<sp/>0,<sp/>0,<sp/>1000,<sp/>false,<sp/>false,<sp/>false);
<sp/>g_nWidth<sp/>=<sp/>textwidth(s);
<sp/><sp/><sp/>g_nHeight<sp/>=<sp/>textheight(s);
<sp/>Resize(&amp;img,<sp/>g_nWidth,<sp/>g_nHeight);

<sp/><sp/><sp/><sp/>//<sp/>输出目标字符串至<sp/>img<sp/>对象
<sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);

<sp/><sp/><sp/>//<sp/>计算构成目标字符串的点的数量
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>g_nCount<sp/>=<sp/>0;
<sp/><sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nCount++;

<sp/><sp/><sp/>//<sp/>计算目标数据
<sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="_hi_start_8cpp_1a03afeaaa63a4c52ca380fbbc2c9143dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a03afeaaa63a4c52ca380fbbc2c9143dd" kindref="member">isEdgePoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>getpixel(x,<sp/>y)<sp/>==<sp/>WHITE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,1},<sp/>{0,-1},<sp/>{1,0},<sp/>{-1,0}<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,2},<sp/>{0,-2},<sp/>{2,0},<sp/>{-2,0}<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>POINT<sp/>t[4]<sp/>=<sp/>{<sp/>{0,4},<sp/>{0,-1},<sp/>{4,0},<sp/>{-1,0}<sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getpixel(x,<sp/>y)<sp/>!=<sp/>WHITE)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getpixel(x<sp/>+<sp/>t[i].x,<sp/>y<sp/>+<sp/>t[i].y)<sp/>!=<sp/>WHITE)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>获取目标点集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_hi_start_8cpp_1a497d677ad9bd5fb9ca2275a7e68c59b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a497d677ad9bd5fb9ca2275a7e68c59b7" kindref="member">GetDstPoints</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置临时绘图对象 <sp/><sp/><sp/>IMAGE<sp/>img;
<sp/>SetWorkingImage(&amp;img);

<sp/><sp/><sp/><sp/>//<sp/>定义目标字符串
<sp/><sp/><sp/>TCHAR<sp/>s[]<sp/>=<sp/>_T(&quot;Hi<sp/>EasyX&quot;);

<sp/><sp/><sp/>//<sp/>计算目标字符串的宽高，并调整临时绘图对象的尺寸
<sp/><sp/><sp/>setcolor(WHITE);
<sp/><sp/><sp/>setfont(120,<sp/>0,<sp/>_T(&quot;Arial&quot;),<sp/>0,<sp/>0,<sp/>1000,<sp/>false,<sp/>false,<sp/>false);
<sp/>g_nWidth<sp/>=<sp/>textwidth(s);
<sp/><sp/><sp/>g_nHeight<sp/>=<sp/>textheight(s);
<sp/>Resize(&amp;img,<sp/>g_nWidth,<sp/>g_nHeight);

<sp/><sp/><sp/><sp/>//<sp/>输出目标字符串至<sp/>img<sp/>对象
<sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);

<sp/><sp/><sp/>//<sp/>计算构成目标字符串的点的数量
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>g_nCount<sp/>=<sp/>0;
<sp/><sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nCount++;

<sp/><sp/><sp/>//<sp/>计算目标数据
<sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE<sp/>img;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SetWorkingImage(&amp;img);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>定义目标字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>s[]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;Hi<sp/>EasyX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算目标字符串的宽高，并调整临时绘图对象的尺寸 <sp/><sp/><sp/>setcolor(WHITE);
<sp/><sp/><sp/>setfont(120,<sp/>0,<sp/>_T(&quot;Arial&quot;),<sp/>0,<sp/>0,<sp/>1000,<sp/>false,<sp/>false,<sp/>false);
<sp/>g_nWidth<sp/>=<sp/>textwidth(s);
<sp/><sp/><sp/>g_nHeight<sp/>=<sp/>textheight(s);
<sp/>Resize(&amp;img,<sp/>g_nWidth,<sp/>g_nHeight);

<sp/><sp/><sp/><sp/>//<sp/>输出目标字符串至<sp/>img<sp/>对象
<sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);

<sp/><sp/><sp/>//<sp/>计算构成目标字符串的点的数量
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>g_nCount<sp/>=<sp/>0;
<sp/><sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nCount++;

<sp/><sp/><sp/>//<sp/>计算目标数据
<sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>setcolor(WHITE);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>setfont(120,<sp/>0,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>0,<sp/>1000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" kindref="member">g_nWidth</ref><sp/>=<sp/>textwidth(s);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" kindref="member">g_nHeight</ref><sp/>=<sp/>textheight(s);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Resize(&amp;img,<sp/><ref refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" kindref="member">g_nWidth</ref>,<sp/><ref refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" kindref="member">g_nHeight</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>输出目标字符串至<sp/>img<sp/>对象 <sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);

<sp/><sp/><sp/>//<sp/>计算构成目标字符串的点的数量
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>g_nCount<sp/>=<sp/>0;
<sp/><sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nCount++;

<sp/><sp/><sp/>//<sp/>计算目标数据
<sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>outtextxy(0,<sp/>0,<sp/>s);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算构成目标字符串的点的数量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" kindref="member">g_nWidth</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/><ref refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" kindref="member">g_nHeight</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_hi_start_8cpp_1a03afeaaa63a4c52ca380fbbc2c9143dd" kindref="member">isEdgePoint</ref>(x,<sp/>y))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref>++;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算目标数据 <sp/>g_pDst<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/>for<sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>g_nWidth;<sp/>x++)
<sp/><sp/><sp/><sp/><sp/>for<sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>g_nHeight;<sp/>y++)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isEdgePoint(x,<sp/>y))
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/>g_nWidth)<sp/>/<sp/>2;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pDst[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/>g_nHeight)<sp/>/<sp/>2<sp/>-<sp/>20;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/>//<sp/>恢复对屏幕的绘图操作
<sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>POINT[<ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref>];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" kindref="member">g_nWidth</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/><ref refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" kindref="member">g_nHeight</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_hi_start_8cpp_1a03afeaaa63a4c52ca380fbbc2c9143dd" kindref="member">isEdgePoint</ref>(x,<sp/>y))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref>[i].x<sp/>=<sp/>x<sp/>+<sp/>(640<sp/>-<sp/><ref refid="_hi_start_8cpp_1a0a73ec0c46c81073d00ef599aeaa1ad6" kindref="member">g_nWidth</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref>[i].y<sp/>=<sp/>y<sp/>+<sp/>(480<sp/>-<sp/><ref refid="_hi_start_8cpp_1a44467b4d49fff5b48dfc5abe5d30be89" kindref="member">g_nHeight</ref>)<sp/>/<sp/>2<sp/>-<sp/>20;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>恢复对屏幕的绘图操作 <sp/><sp/><sp/>SetWorkingImage(nullptr);
}

//<sp/>获取源点集
void<sp/>GetSrcPoints()
{
<sp/><sp/>//<sp/>设置随机种子
<sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>SetWorkingImage(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>获取源点集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_hi_start_8cpp_1a0819cab075a83713777d4aacd93890b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a0819cab075a83713777d4aacd93890b8" kindref="member">GetSrcPoints</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置随机种子 <sp/><sp/>srand((unsigned<sp/>int)time(nullptr));

<sp/><sp/><sp/>//<sp/>设置随机的源数据
<sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>srand((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置随机的源数据 <sp/><sp/><sp/>g_pSrc<sp/>=<sp/>new<sp/>POINT[g_nCount];
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_nCount;<sp/>i++)
<sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pSrc[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;
<sp/><sp/><sp/><sp/>}
}

//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)
void<sp/>Blur(DWORD*<sp/>pMem)
{
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);
<sp/><sp/>}
}

//<sp/>主函数
void<sp/>HiEasyX::RenderStartScene()
{
<sp/><sp/><sp/><sp/>initgraph(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>创建绘图窗口
<sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>POINT[<ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref>];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>[i].x<sp/>=<sp/>rand()<sp/>%<sp/>640;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>[i].y<sp/>=<sp/>rand()<sp/>%<sp/>480;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>全屏模糊处理(忽略屏幕第一行和最后一行)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_hi_start_8cpp_1a83f71c038a6b2540ee9cde9a4bc79176" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a83f71c038a6b2540ee9cde9a4bc79176" kindref="member">Blur</ref>(DWORD*<sp/>pMem)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>640;<sp/>i<sp/>&lt;<sp/>640<sp/>*<sp/>479;<sp/>i++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMem[i]<sp/>=<sp/>RGB(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetRValue(pMem[i])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetRValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetRValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.f,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetGValue(pMem[i])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetGValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetGValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetBValue(pMem[i])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>640])<sp/>+<sp/>GetBValue(pMem[i<sp/>-<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>1])<sp/>+<sp/>GetBValue(pMem[i<sp/>+<sp/>640]))<sp/>/<sp/>5.1f);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>主函数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespace_hi_easy_x_1aa1eb0a0ff295b49299fdc2c48f4b195b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_hi_easy_x_1aa1eb0a0ff295b49299fdc2c48f4b195b" kindref="member">HiEasyX::RenderStartScene</ref>()</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_window_8h_1a4c09b71f211e2f8e29758ea49356232b" kindref="member">initgraph</ref>(640,<sp/>480);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>创建绘图窗口 <sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));
<sp/><sp/><sp/>cleardevice();
<sp/>setbkmode(TRANSPARENT);

<sp/><sp/><sp/>DWORD*<sp/>pBuf<sp/>=<sp/>GetImageBuffer();

<sp/><sp/><sp/>GetDstPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取目标点集
<sp/><sp/><sp/><sp/>GetSrcPoints();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>获取源点集

<sp/><sp/><sp/><sp/>//<sp/>运算
<sp/><sp/>int<sp/>x,<sp/>y;
<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗
<sp/><sp/><sp/><sp/><sp/><sp/>//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>正常
<sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blur(pBuf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>全屏模糊处理

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>g_nCount;<sp/>d++)
<sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>g_pSrc[d].x<sp/>+<sp/>(g_pDst[d].x<sp/>-<sp/>g_pSrc[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>g_pSrc[d].y<sp/>+<sp/>(g_pDst[d].y<sp/>-<sp/>g_pSrc[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>直接操作显示缓冲区画点
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>setbkcolor(RGB(80,<sp/>80,<sp/>80));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>cleardevice();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>setbkmode(TRANSPARENT);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD*<sp/><ref refid="_hi_icon_8cpp_1a92b53d2b80fae89ced937e9da8792c14" kindref="member">pBuf</ref><sp/>=<sp/>GetImageBuffer();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a497d677ad9bd5fb9ca2275a7e68c59b7" kindref="member">GetDstPoints</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取目标点集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a0819cab075a83713777d4aacd93890b8" kindref="member">GetSrcPoints</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取源点集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>运算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>256;<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>-<sp/>50;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>暗</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>亮</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gray<sp/>=<sp/>i<sp/>-<sp/>1<sp/>+<sp/>100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>正常</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gray<sp/>&lt;<sp/>0)<sp/>gray<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gray<sp/>&gt;<sp/>255)<sp/>gray<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>c<sp/>=<sp/>RGB(gray,<sp/>gray,<sp/>gray);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_start_8cpp_1a83f71c038a6b2540ee9cde9a4bc79176" kindref="member">Blur</ref>(<ref refid="_hi_icon_8cpp_1a92b53d2b80fae89ced937e9da8792c14" kindref="member">pBuf</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>全屏模糊处理</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/><ref refid="_hi_start_8cpp_1a8dae884e77dfc241294bd7cadb9f95ee" kindref="member">g_nCount</ref>;<sp/>d++)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>[d].x<sp/>+<sp/>(<ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref>[d].x<sp/>-<sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>[d].x)<sp/>*<sp/>i<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>[d].y<sp/>+<sp/>(<ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref>[d].y<sp/>-<sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>[d].y)<sp/>*<sp/>i<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hi_icon_8cpp_1a92b53d2b80fae89ced937e9da8792c14" kindref="member">pBuf</ref>[y<sp/>*<sp/>640<sp/>+<sp/>x]<sp/>=<sp/>c;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>直接操作显示缓冲区画点 <sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}

<sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;;
<sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);

<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>延时
<sp/><sp/>}

<sp/>//<sp/>清理内存
<sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//putpixel(g_pDst[d].x,<sp/>g_pDst[d].y,<sp/>WHITE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>lpszText<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;Animation<sp/>Author<sp/>:<sp/><sp/>慢羊羊&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outtextxy(getwidth()<sp/>-<sp/>textwidth(lpszText),<sp/>getheight()<sp/>-<sp/>textheight(lpszText),<sp/>lpszText);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>延时</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>清理内存 <sp/><sp/><sp/><sp/>delete<sp/>g_pDst;
<sp/>delete<sp/>g_pSrc;

<sp/><sp/><sp/><sp/>Sleep(2000);
<sp/><sp/><sp/>ShowWindow(GetHWnd(),<sp/>SW_HIDE);
}
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a82b7776a8a1984bb13a8a5c5e068c87a" kindref="member">g_pDst</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="_hi_start_8cpp_1a742020e3aae1c129dcd6e0a1bef7ff98" kindref="member">g_pSrc</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(2000);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ShowWindow(<ref refid="_hi_window_8h_1a438d4c23c04ce43cd76de38c8fbbe92f" kindref="member">GetHWnd</ref>(),<sp/>SW_HIDE);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/_MYC/_VS_Project/HiEasyX/HiEasyX/HiEasyX/HiStart.cpp"/>
  </compounddef>
</doxygen>
